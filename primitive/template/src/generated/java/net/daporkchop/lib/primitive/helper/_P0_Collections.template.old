$$$settings$$$
{
    "params": [
        {
            "genericName": "E"
        }
    ]
}
_headers_

import net.daporkchop.lib.primitive.collection._P0_Collection;
import net.daporkchop.lib.primitive.collection._P0_Iterable;
import net.daporkchop.lib.primitive.collection._P0_Iterator;
import net.daporkchop.lib.primitive.lambda._P0_Consumer;
import net.daporkchop.lib.primitive.lambda._P0_BoolFunction;
import net.daporkchop.lib.primitive.list._P0_List;
import net.daporkchop.lib.primitive.set._P0_Set;

/**
 * Various utility methods for working with {@link _P0_Collection} and family.
 *
 * @author DaPorkchop_
 */
@UtilityClass<%
@SuppressWarnings("unchecked")%>
public class _P0_Collections {
    private final _P0_Set EMPTY_SET = new EmptySet();

    public<% _G_%> _P0_Set_G_ emptySet()    {
        return <%(_P0_Set_G_) %>EMPTY_Set;
    }

    private static final class EmptySet_G_ implements _P0_Set_G_ {
        @Override
        public int size()   {
            return 0;
        }

        @Override
        public boolean isEmpty()    {
            return true;
        }

        @Override
        public boolean contains(_p0_ val)   {
            return false;
        }

        @Override
        public _p0_[] toArray()  {
            return new _p0_[0];
        }

        @Override
        public _p0_[] toArray(@NonNull _p0_[] a) {
            if (a.length > 0)   {
                a[0] = _EP0_;
            }
            return a;
        }

        @Override
        public boolean add(_p0_ val)    {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean remove(_p0_ val) {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean containsAll(@NonNull _P0_Collection c)   {
            return c.isEmpty();
        }

        @Override
        public boolean addAll(@NonNull _P0_Collection c)    {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean removeAll(@NonNull _P0_Collection c) {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean removeIf(@NonNull _P0_BoolFunction filter)  {
            throw new UnsupportedOperationException();
        }

        @Override
        public boolean retainAll(@NonNull _P0_Collection c)  {
            throw new UnsupportedOperationException();
        }

        @Override
        public void clear() {
        }
    }
}
